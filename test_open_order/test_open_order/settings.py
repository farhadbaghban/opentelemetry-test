"""
Django settings for test_open_order project.

Generated by 'django-admin startproject' using Django 4.2rc1.
"""

from pathlib import Path
# from opentelemetry.sdk.resources import Resource
# from opentelemetry.sdk.trace import TracerProvider
# from opentelemetry.exporter.jaeger.thrift import JaegerExporter
# from opentelemetry.sdk.trace.export import BatchSpanProcessor
# from opentelemetry import trace

# # Define the resource (application/service name)
# resource = Resource.create(attributes={
#     "service.name": "order"  # Replace with your service name
# })

# # Set up the tracer provider
# trace_provider = TracerProvider(resource=resource)

# # Set up the Jaeger exporter
# jaeger_exporter = JaegerExporter(
#     agent_host_name="localhost",  # Replace with your Jaeger Docker container host
#     agent_port=6831  # Default Jaeger agent port for UDP traces
# )

# # Add a BatchSpanProcessor to process traces asynchronously
# trace_provider.add_span_processor(BatchSpanProcessor(jaeger_exporter))

# # Set the tracer provider as the global default
# trace.set_tracer_provider(trace_provider)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-whl0!6cq*%)uusu+!$#(0vxf_0)43(c+nq*h1^-qknt0g*z748'
DEBUG = True
ALLOWED_HOSTS = ["*"]

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'order',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'test_open_order.middlewares.TraceMiddleware',
    # 'test_open_order.middlewares.OpenTelemetryAPIMiddleware'
]


ROOT_URLCONF = 'test_open_order.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'test_open_order.wsgi.application'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

STATIC_URL = 'static/'
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
SERVICE_NAME = "Order"